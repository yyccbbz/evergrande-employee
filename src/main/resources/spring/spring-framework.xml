<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						   http://www.springframework.org/schema/aop
						   http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 加载配置文件 -->
	<bean id="placeholder" class="com.baomidou.framework.velocity.VelocityPropertyPlaceholderConfigurer">
		<!-- 允许JVM参数覆盖 -->
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<!-- 忽略没有找到的资源文件 -->
		<property name="ignoreResourceNotFound" value="true"/>
		<!-- 配置资源文件 -->
		<property name="locations">
			<list>
				<value>classpath:properties/jdbc.properties</value>
				<value>classpath:properties/httpclient.properties</value>
			</list>
		</property>
	</bean>

	<!-- 激活自动代理功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true" /> 

	<!-- 扫描切面包路径 -->
	<bean id="logAspect" class="com.baomidou.framework.aop.LogAspect">
		<property name="logPoint">
			<bean class="com.baomidou.springwind.service.impl.SystemLogServiceImpl" />
		</property>
	</bean>
	<aop:config>
		<aop:aspect ref="logAspect">
			<aop:pointcut id="logPointCut" expression="@annotation(com.baomidou.framework.annotations.Log)" />
			<aop:around pointcut-ref="logPointCut" method="saveLog" />
		</aop:aspect>
	</aop:config>

	<!-- Excel上下文  -->
	<bean id="excelContext" class="com.baomidou.springwind.excel.ExcelContext">
		<constructor-arg>
			<!--你自己的excel配置文件路径,不要使用classpath前缀,底层使用的classPathResource-->
			<value>xml/excel-config.xml</value>
		</constructor-arg>
	</bean>
	<!-- 初始化SpringUtil -->
	<bean id="springUtil" class="com.baomidou.springwind.common.utils.SpringUtil"/>

	<!--  HTTPCLIENT  -->

	<bean id="poolingHttpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${http.maxTotal}"/>
		<!-- 设置每个主机的并发数 -->
		<property name="defaultMaxPerRoute" value="${http.defaultMaxPerRoute}"/>
	</bean>

	<!-- HttpClient对象的构建器 -->
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder">
		<property name="connectionManager" ref="poolingHttpClientConnectionManager"/>
	</bean>

	<!-- HttpClient对象 注意该对象需要设置scope="prototype":多例 -->
	<bean class="org.apache.http.impl.client.CloseableHttpClient"
		  factory-bean="httpClientBuilder" factory-method="build" scope="prototype"/>

	<!-- 请求配置的构建器 -->
	<bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig.Builder">
		<!-- 创建连接的最长时间 -->
		<property name="connectTimeout" value="${http.connectTimeout}"/>
		<!-- 从连接池中获取到连接的最长时间 -->
		<property name="connectionRequestTimeout" value="${http.connectionRequestTimeout}"/>
		<!-- 数据传输的最长时间 -->
		<property name="socketTimeout" value="${http.socketTimeout}"/>
		<!-- 提交请求前测试连接是否可用 -->
		<property name="staleConnectionCheckEnabled" value="${http.staleConnectionCheckEnabled}"/>
	</bean>

	<!-- RequestConfig对象 -->
	<bean class="org.apache.http.client.config.RequestConfig"
		  factory-bean="requestConfigBuilder" factory-method="build"/>

	<!-- 定期清理无效连接 -->
	<bean class="com.baomidou.springwind.common.http.IdleConnectionEvictor">
		<constructor-arg index="0" ref="poolingHttpClientConnectionManager"/>
	</bean>

</beans>
